input MemberContent {
    artist: String
    instrument: String
    years: [String]
}

type Member {
    artist: Artist
    instrument: String
    years: [String]
}

type Band {
    id: ID!
    name: String
    origin: String
    members: [Member]
    website: String
    genres: [Genre]
}

extend type Query {
    bands(limit: Int, offset: Int): [Band]
    band(id: ID!): Band
}

extend type Mutation {
    createBand(name: String!, origin: String, website: String, genresIds: [String], members: [MemberContent]): Band
    updateBand(id: ID!, name: String, origin: String, website: String, genresIds: [String], members: [MemberContent]): Band
    deleteBand(id: ID!): DeleteResponse
}